# This is a basic workflow to help you get started with Actions

name: build

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            **.docker
            images/**.docker
      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          GH_TOKEN: ${{ github.token }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            SOURCE_IMAGE_NAME=$(cat $file | grep SOURCE_IMAGE | awk -F= '{print $2}')
            DEST_IMAGE_NAME=$(cat $file | grep DEST_IMAGE | awk -F= '{print $2}')
            SOURCE_CHECKSUM=$( docker image inspect ${SOURCE_IMAGE_NAME} | jq '.[].Id')
            CURRENT_CHECKSUM=$(docker image inspect ${DEST_IMAGE_NAME} | jq '.[].Id')
            echo ${SOURCE_CHECKSUM}
            echo ${CURRENT_CHECKSUM}
            gh run cancel ${{ github.run_id }}
            gh run watch ${{ github.run_id }}
          done
          
  dive_scan:
    # The type of runner that the job will run on
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            **.docker
            images/**.docker
         # since_last_remote_commit: true
      - name: download dive
        run: |
          VERSION=$(curl https://github.com/wagoodman/dive/releases.atom| grep -oP '(?<=<title>v).*?(?=</title>)' | head -n1)
          wget https://github.com/wagoodman/dive/releases/download/v${VERSION}/dive_${VERSION}_linux_amd64.deb
          sudo dpkg -i dive_${VERSION}_linux_amd64.deb
      - name: get images
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            
          done
          
      - name: find all directories
        run: |
          dive --ci --json analysis.json ghcr.io/alexta69/metube:latest 
      - uses: actions/upload-artifact@v4
        with:
          name: dive-analysis
          path: analysis.json
          if-no-files-found: warn

  trivy_scan:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: install trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -qy
          sudo apt-get install -qy trivy
      - name: find all directories
        run: |
          trivy image --format json --output trivy.json ghcr.io/alexta69/metube:latest 
      - name: summarise results
        run: |
          cat trivy.json | jq  '.Results'  | jq '.[].Vulnerabilities' >> $GITHUB_STEP_SUMMARY
      - uses: actions/upload-artifact@v4
        with:
          name: trivy-analysis
          path: trivy.json
          if-no-files-found: warn

  check_image:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [dive_scan,trivy_scan]
    steps:
      - uses: actions/checkout@v4
      - name: get image
        run: |
          external_digest=$(docker image inspect ${ | jq '.[].RepoDigests[0]')





